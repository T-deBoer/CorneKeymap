/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 700  // default: 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 3    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        ComboESC {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        ComboUndo {
            bindings = <&kp LC(Z)>;
            key-positions = <3 2>;
        };

        ComboRedo {
            bindings = <&kp LC(Y)>;
            key-positions = <3 4>;
        };

        ComboCopy {
            bindings = <&kp LC(C)>;
            key-positions = <3 14>;
        };

        ComboPaste {
            bindings = <&kp LC(V)>;
            key-positions = <3 16>;
        };

        ComboCut {
            bindings = <&kp LC(X)>;
            key-positions = <14 16>;
        };

        ComboSave {
            bindings = <&kp LC(S)>;
            key-positions = <15 28>;
        };

        ComboSelLine {
            bindings = <&MacroSelLine>;
            key-positions = <3 5>;
        };

        ComboChevron {
            bindings = <&kp LS(NON_US_BSLH)>;
            key-positions = <4 17>;
        };

        ComboLChevron {
            bindings = <&kp NON_US_BSLH>;
            key-positions = <7 18>;
        };

        ComboDQuotes {
            bindings = <&kp LS(N2)>;
            key-positions = <4 5>;
        };

        ComboLEnter {
            bindings = <&kp KP_ENTER>;
            key-positions = <16 17>;
        };

        ComboREnter {
            bindings = <&kp KP_ENTER>;
            key-positions = <18 19>;
        };

        ComboSelAll {
            bindings = <&kp LC(A)>;
            key-positions = <2 4>;
        };

        ComboBackspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 19>;
        };

        ComboBackWord {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <19 20 21>;
        };

        ComboDel {
            bindings = <&kp DEL>;
            key-positions = <21 22>;
        };

        ComboDelWord {
            bindings = <&kp LC(DEL)>;
            key-positions = <21 22 23>;
        };

        ComboLeft {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <31 32>;
        };

        ComboRight {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <32 33>;
        };

        ComboLWord {
            bindings = <&kp LC(LEFT_ARROW)>;
            key-positions = <30 31 32>;
        };

        ComboRWord {
            bindings = <&kp LC(RIGHT_ARROW)>;
            key-positions = <31 32 33>;
        };

        ComboUp {
            bindings = <&kp UP_ARROW>;
            key-positions = <31 20>;
        };

        ComboDown {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <20 33>;
        };

        ComboN1 {
            bindings = <&kp N1>;
            key-positions = <1 13>;
        };

        ComboN2 {
            bindings = <&kp N2>;
            key-positions = <2 14>;
        };

        ComboN3 {
            bindings = <&kp N3>;
            key-positions = <3 15>;
        };

        ComboN4 {
            bindings = <&kp N4>;
            key-positions = <4 16>;
        };

        ComboN5 {
            bindings = <&kp N5>;
            key-positions = <5 17>;
        };

        ComboN6 {
            bindings = <&kp N6>;
            key-positions = <6 18>;
        };

        ComboN7 {
            bindings = <&kp N7>;
            key-positions = <7 19>;
        };

        ComboN8 {
            bindings = <&kp N8>;
            key-positions = <8 20>;
        };

        ComboN9 {
            bindings = <&kp N9>;
            key-positions = <9 21>;
        };

        ComboN0 {
            bindings = <&kp N0>;
            key-positions = <10 22>;
        };

        Combo+ {
            bindings = <&kp MINUS>;
            key-positions = <11 23>;
        };

        ComboGrTi {
            bindings = <&kp GRAVE>;
            key-positions = <13 25>;
        };

        ComboHome {
            bindings = <&kp HOME>;
            key-positions = <8 9>;
        };

        ComboEnd {
            bindings = <&kp END>;
            key-positions = <9 10>;
        };

        ComboPGUP {
            bindings = <&kp PAGE_UP>;
            key-positions = <9 20>;
        };

        ComboPGDN {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <9 22>;
        };

        ComboBackslagPipe {
            bindings = <&kp LS(N7)>;
            key-positions = <30 19>;
        };

        ComboBackslash {
            bindings = <&kp RA(NON_US_BSLH)>;
            key-positions = <16 29>;
        };

        ComboLine {
            bindings = <&kp SLASH>;
            key-positions = <34 35>;
        };

        ComboAposAst {
            bindings = <&kp BSLH>;
            key-positions = <22 23>;
        };

        ComboAccent {
            bindings = <&kp EQUAL>;
            key-positions = <10 11>;
        };

        ComboExcl {
            bindings = <&kp LS(N1)>;
            key-positions = <7 21>;
        };

        ComboQMark {
            bindings = <&kp LS(MINUS)>;
            key-positions = <9 19>;
        };

        ComboAT {
            bindings = <&kp RA(N2)>;
            key-positions = <13 16>;
        };

        ComboLBrace {
            bindings = <&kp RA(N7)>;
            key-positions = <15 27>;
        };

        ComboLPar {
            bindings = <&kp LS(N8)>;
            key-positions = <28 16>;
        };

        ComboLBrackBrace {
            bindings = <&kp RA(N8)>;
            key-positions = <17 29>;
        };

        ComboRBrackBrace {
            bindings = <&kp RA(N9)>;
            key-positions = <18 30>;
        };

        ComboRPar {
            bindings = <&kp LS(N9)>;
            key-positions = <19 31>;
        };

        ComboRBrace {
            bindings = <&kp LS(N0)>;
            key-positions = <20 32>;
        };

        Combo_Umlaut {
            bindings = <&kp RBKT>;
            key-positions = <11 22>;
        };

        ComboComma {
            bindings = <&kp COMMA>;
            key-positions = <31 21>;
        };

        ComboPeriod {
            bindings = <&kp PERIOD>;
            key-positions = <19 21>;
        };

        Combo_RDquotes {
            bindings = <&kp LS(N2)>;
            key-positions = <6 7>;
        };

        Combo_L04 {
            bindings = <&mo 3>;
            key-positions = <40 41>;
        };

        Combo_Space {
            bindings = <&kp SPACE>;
            key-positions = <38 39>;
        };
    };

    ComboAT {
        bindings = <&kp AT>;
        key-positions = <13 16>;
    };

    macros {
        MacroSelLine: MacroSelLine {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "MACROSELLINE";
        };

        Macro_a1: Macro_arbejde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp LS(N3)>;
            label = "MACRO_ARBEJDE";
        };

        Macro_r1: Macro_Arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp LS(N3)>;
            label = "MACRO_ARROW";
        };

        Macro_p1: macro_problem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp LS(N3)>;
            label = "MACRO_PROBLEM";
        };

        Macro_f1: Macro_fortaelle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp LS(N3)>;
            label = "MACRO_FORTAELLE";
        };

        Macro_o1: Macro_opleve {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp LS(N3)>;
            label = "MACRO_OPLEVE";
        };

        Macro_oe1: Macro_oevelse {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp LS(N3)>;
            label = "MACRO_OEVELSE";
        };

        Macro_ae1: Macro_aendre {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SEMI &kp LS(N3)>;
            label = "MACRO_AENDRE";
        };

        Macro_v1: Macro_vigtig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp LS(N3)>;
            label = "MACRO_VIGTIG";
        };

        Macro_t1: Macro_taenke {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp LS(N3)>;
            label = "MACRO_TAENKE";
        };

        Macro_k1: Macro_kunne {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp LS(N3)>;
            label = "MACRO_KUNNE";
        };

        Macro_c1: Macro_chance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp LS(N3)>;
            label = "MACRO_CHANCE";
        };

        Macro_b1: Macro_blive {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp LS(N3)>;
            label = "MACRO_BLIVE";
        };

        Macro_e1: Macro_eller {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp LS(N3)>;
            label = "MACRO_ELLER";
        };

        Macro_g1: Macro_gerne {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp LS(N3)>;
            label = "MACRO_GERNE";
        };

        Macro_l1: Macro_laenge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp LS(N3)>;
            label = "MACRO_LAENGE";
        };

        Macro_b2: Macro_bruge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp LS(N5)>;
            label = "MACRO_BRUGE";
        };

        Macro_d1: Macro_denne {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp LS(N3)>;
            label = "MACRO_DENNE";
        };

        Macro_d2: Macro_d2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp LS(N5)>;
            label = "MACRO_D2";
        };

        Macro_e2: Macro_e2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp LS(N5)>;
            label = "MACRO_E2";
        };

        Macro_f2: Macro_f2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp LS(N5)>;
            label = "MACRO_F2";
        };

        Macro_h2: Macro_h2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp LS(N5)>;
            label = "MACRO_H2";
        };

        Macro_h1: Macro_h1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp LS(N3)>;
            label = "MACRO_H1";
        };

        Macro_i1: Macro_i1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp LS(N3)>;
            label = "MACRO_I1";
        };

        Macro_i2: Macro_i2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp LS(N5)>;
            label = "MACRO_I2";
        };

        Macro_j2: Macro_j1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp LS(N5)>;
            label = "MACRO_J1";
        };

        Macro_j1: Macro_j2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp LS(N3)>;
            label = "MACRO_J2";
        };

        Macro_k2: Macro_k2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp LS(N5)>;
            label = "MACRO_K2";
        };

        Macro_l2: Macro_l2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp LS(N5)>;
            label = "MACRO_L2";
        };

        Macro_m1: Macro_m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp LS(N3)>;
            label = "MACRO_M1";
        };

        Macro_m2: Macro_m2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp LS(N5)>;
            label = "MACRO_M2";
        };

        Macro_n1: Macro_n1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp LS(N3)>;
            label = "MACRO_N1";
        };

        Macro_o1: Macro_o1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp LS(N3)>;
            label = "MACRO_O1";
        };

        Macro_o2: Macro_o2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp LS(N5)>;
            label = "MACRO_O2";
        };

        Macro_p2: Macro_p2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp LS(N5)>;
            label = "MACRO_P2";
        };

        Macro_r2: Macro_r2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp LS(N5)>;
            label = "MACRO_R2";
        };

        Macro_s1: Macro_s1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp LS(N3)>;
            label = "MACRO_S1";
        };

        Macro_s2: Macro_s2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp LS(N5)>;
            label = "MACRO_S2";
        };

        Macro_t2: Macro_t2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp LS(N5)>;
            label = "MACRO_T2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L00_Base {
            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F     &kp P     &kp B          &kp J        &kp L  &kp U      &kp Y    &kp SEMI  &kp LBKT
&kp LCTRL  &kp A  &kp R  &kp S     &kp T     &kp G          &kp M        &kp N  &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp D     &kp V          &kp K        &kp H  &kp COMMA  &kp DOT  &kp FSLH  &mo 4
                         &kp LGUI  &kp LALT  &lt 5 SPACE    &lt 4 SPACE  &mo 1  &mo 2
            >;
        };

        L01_NumFunc {
            display-name = "NumFunc";
            bindings = <
&trans  &none     &kp F7  &kp F8    &kp F9    &kp F10      &none      &kp N7  &kp N8     &kp N9  &none  &none
&trans  &kp LALT  &kp F4  &kp F5    &kp F6    &kp F11      &none      &kp N4  &kp N5     &kp N6  &none  &none
&trans  &kp LGUI  &kp F1  &kp F2    &kp F3    &kp F12      &kp N0     &kp N1  &kp N2     &kp N3  &none  &trans
                          &kp LGUI  &kp LALT  &kp SPACE    &kp SPACE  &none   &kp RCTRL
            >;
        };

        L02_Mouse {
            bindings = <
&trans  &none  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &none     &none   &none   &none      &mkp MCLK  &mkp RCLK  &none
&trans  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none     &none   &none   &mkp LCLK  &mkp MB4   &mkp MB5   &none
&trans  &none  &msc SCRL_LEFT  &none           &msc SCRL_RIGHT  &none     &none   &none   &none      &none      &none      &trans
                               &trans          &trans           &trans    &trans  &trans  &trans
            >;

            label = "Mouse";
        };

        L03_Connection {
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "Connect";
        };

        L04_Strings1 {
            bindings = <
&trans  &trans     &trans     &Macro_f1  &Macro_p1  &Macro_b1    &trans     &trans     &trans     &trans     &Macro_ae1  &trans
&trans  &Macro_a1  &Macro_r1  &trans     &Macro_t1  &Macro_g1    &trans     &trans     &Macro_e1  &Macro_i1  &Macro_o1   &Macro_oe1
&trans  &trans     &trans     &Macro_c1  &Macro_d1  &Macro_v1    &Macro_k1  &Macro_h1  &trans     &trans     &trans      &trans
                              &trans     &trans     &trans       &trans     &trans     &trans
            >;

            label = "Strg 1";
        };

        L05_Strings2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Strg 2";
        };
    };
};
